{"version":3,"sources":["src/environment.js","src/main.js","src/categories/categories.js","src/customers/customer-details.js","src/customers/customer-service.js","src/orders/orders.js","src/products/products.js","src/resources/index.js","src/shell/shell.js","src/customers/customers.js","src/customers/customerDetails.js","src/reportbuilder/helloWorld.js","src/reportbuilder/hello-world.js","src/shell/HelloWorld.js","src/HelloWorld.js","D:/github/aurelia-northwind/src/categories/categories.html","D:/github/aurelia-northwind/src/orders/orders.html","D:/github/aurelia-northwind/src/products/products.html","D:/github/aurelia-northwind/src/customers/customer-details.html","D:/github/aurelia-northwind/src/customers/customers.html","D:/github/aurelia-northwind/src/shell/shell.html","D:/github/aurelia-northwind/src/shell/sidebar.html","D:/github/aurelia-northwind/src/customers/customerDetails.html","D:/github/aurelia-northwind/src/reportbuilder/composeExample.html","D:/github/aurelia-northwind/src/reportbuilder/helloWorld.html","D:/github/aurelia-northwind/src/HelloWorld.html","D:/github/aurelia-northwind/src/shell/alternative-hello-world.html","D:/github/aurelia-northwind/src/alternative-hello-world.html"],"names":["debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Categories","CustomerDetails","CustomerService","httpClient","getCustomers","get","Orders","Products","Shell","configureRouter","router","Customers","customers","activate","HelloWorld","modelData","console","log","model","getViewStrategy","demo"],"mappings":";;;;;;oBAAe;AACbA,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,CAAgB,aAAhB,CAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;MCvBoBC,aACnB,sBAAa;AAAA;AAAE;;oBADIA;;;;;;;;;;;;;;;MCDRC,0BAAAA,kBACX,2BAAa;AAAA;AAEZ;;;;;;;;;;;;;;;;;;MCCkBC,0BADpB;AAEC,6BAAYC,UAAZ,EAAuB;AAAA;;AACrB,WAAKA,UAAL,GAAkBA,UAAlB;AACD;;8BAEDC,uCAAe;AACV,aAAO,KAAKD,UAAL,CAAgBE,GAAhB,CAAoB,8CAApB,CAAP;AACJ;;;;oBAPkBH;;;;;;;;;;;;;;;MCHAI,SACnB,kBAAa;AAAA;AAAE;;oBADIA;;;;;;;;;;;;;;;MCAAC,WACnB,oBAAa;AAAA;AAAE;;oBADIA;;;;;;;;UCDLrB,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;MCFYoB,gBAAAA;AAEX,qBAAa;AAAA;AACZ;;oBAEDC,2CAAgBrB,QAAOsB,QAAO;AAC5B,WAAKA,MAAL,GAAcA,MAAd;AAQD;;;;;;;;;;;;;;;;;;MCXUC,oBAAAA;AAGX,yBAAa;AAAA;;AAAA,WAFbC,SAEa,GAFD,EAEC;AACZ;;wBAEDC,+BAAU,CAET;;;;;;;;;;;;;;;;;;MCXUZ,0BAAAA,kBACX,2BAAa;AAAA;AAEZ;;;;;;;;;;;;;;;OCHUa,qBAAAA;AACV,4BAAc;AAAA;AAAG;;2BAEjBD,6BAASE,WAAU;AACjBC,iBAAQC,GAAR,CAAYF,SAAZ;AACD;;;;;;;;;;;;;;;;;;OCLSD,qBAAAA;AACV,4BAAc;AAAA;AAAG;;2BAEjBD,6BAASE,WAAU;AACjBC,iBAAQC,GAAR,CAAYF,SAAZ;AACD;;;;;;;;;;;;;;;;;;MCLSD,qBAAAA;AACX,0BAAa;AAAA;AAEZ;;yBAEDD,6BAASE,WAAW;AAClBC,cAAQC,GAAR,CAAYF,SAAZ;AACD;;;;;;;;;;;;;;;;;;MCPUD,qBAAAA;AACX,0BAAa;AAAA;AAEZ;;yBAEDD,6BAASE,WAAW;AAClB,WAAKG,KAAL,GAAaH,SAAb;AACAC,cAAQC,GAAR,CAAYF,SAAZ;AACD;;yBAEDI,6CAAiB;AACf,UAAG,KAAKD,KAAL,CAAWE,IAAX,IAAmB,MAAtB,EAA6B;AACvB,eAAO,8BAAP;AACL,OAFD,MAEK;AACH,eAAO,iBAAP;AACD;AACF;;;;;AChBH;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot('shell/shell'));\n}\n","\nexport default class Categories {\n  constructor(){}\n}\n","export class CustomerDetails {\n  constructor(){\n    \n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\n\n@inject(HttpClient)\nexport default class CustomerService {\n  constructor(httpClient){\n    this.httpClient = httpClient;\n  }\n\n  getCustomers() {\n       return this.httpClient.get(\"http://localhost:51340/customers?format=json\");\n  }  \n}\n","\nexport default class Orders {\n  constructor(){}\n}\n","\nexport default class Products {\n  constructor(){}\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Shell {\n\n  constructor(){\n  }\n\n  configureRouter(config,router){\n    this.router = router;\n    // config.map([\n    //   { route: ['', 'customers'], name: 'customers', moduleId: 'customers/customers', title: 'Customers'},\n    //   { route: 'customerDetails/:id', name: 'customerDetails', moduleId: 'customers/customerDetails', title: 'Customer Details' },\n    //   { route: 'orders', name: 'orders', moduleId: 'orders/orders', title: 'Orders',nav: true },\n    //   { route: 'products', name: 'products', moduleId: 'products/products', title: 'Products', nav:true},\n    //   { route: 'categories', name: 'categories', moduleId: 'categories/categories', title: 'Categories', nav:true }\n    // ]);\n  }\n}\n","\n\n\nexport class Customers {\n  customers = [];\n\n  constructor(){\n  }\n\n  activate(){\n    \n  }\n \n}\n","export class CustomerDetails {\n  constructor(){\n    \n  }\n}\n","export class HelloWorld {\n   constructor() { }\n   \n   activate(modelData){\n     console.log(modelData);\n   }\n}\n","export class HelloWorld {\n   constructor() { }\n   \n   activate(modelData){\n     console.log(modelData);\n   }\n}\n","export class HelloWorld {\n  constructor(){\n    \n  }\n\n  activate(modelData) {\n    console.log(modelData); // --> { demo: 'test' }\n  }\n}\n","export class HelloWorld {\n  constructor(){\n    \n  }\n\n  activate(modelData) {\n    this.model = modelData;\n    console.log(modelData); // --> { demo: 'test' }\n  }\n  \n  getViewStrategy(){\n    if(this.model.demo == 'test'){\n          return 'alternative-hello-world.html';\n    }else{\n      return 'HelloWorld.html';\n    }\n  }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"..\\src"}